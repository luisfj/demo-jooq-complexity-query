/*
 * This file is generated by jOOQ.
 */
package dev.luisjohann.jooq;


import dev.luisjohann.jooq.tables.Ajuste;
import dev.luisjohann.jooq.tables.AjusteItem;
import dev.luisjohann.jooq.tables.FlywaySchemaHistory;
import dev.luisjohann.jooq.tables.Operacao;
import dev.luisjohann.jooq.tables.OperacaoItem;
import dev.luisjohann.jooq.tables.Pessoa;
import dev.luisjohann.jooq.tables.Produto;
import dev.luisjohann.jooq.tables.Usuario;

import org.jooq.ForeignKey;
import org.jooq.Record;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> AJUSTE_PKEY = Internal.createUniqueKey(Ajuste.AJUSTE, DSL.name("ajuste_pkey"), new TableField[] { Ajuste.AJUSTE.ID }, true);
    public static final UniqueKey<Record> AJUSTE_ITEM_PKEY = Internal.createUniqueKey(AjusteItem.AJUSTE_ITEM, DSL.name("ajuste_item_pkey"), new TableField[] { AjusteItem.AJUSTE_ITEM.ID }, true);
    public static final UniqueKey<Record> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<Record> OPERACAO_PKEY = Internal.createUniqueKey(Operacao.OPERACAO, DSL.name("operacao_pkey"), new TableField[] { Operacao.OPERACAO.ID }, true);
    public static final UniqueKey<Record> OPERACAO_ITEM_PKEY = Internal.createUniqueKey(OperacaoItem.OPERACAO_ITEM, DSL.name("operacao_item_pkey"), new TableField[] { OperacaoItem.OPERACAO_ITEM.ID }, true);
    public static final UniqueKey<Record> PESSOA_PKEY = Internal.createUniqueKey(Pessoa.PESSOA, DSL.name("pessoa_pkey"), new TableField[] { Pessoa.PESSOA.ID }, true);
    public static final UniqueKey<Record> PRODUTO_PKEY = Internal.createUniqueKey(Produto.PRODUTO, DSL.name("produto_pkey"), new TableField[] { Produto.PRODUTO.ID }, true);
    public static final UniqueKey<Record> USUARIO_PKEY = Internal.createUniqueKey(Usuario.USUARIO, DSL.name("usuario_pkey"), new TableField[] { Usuario.USUARIO.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<Record, Record> AJUSTE__AJUSTE_USUARIO_ID_FKEY = Internal.createForeignKey(Ajuste.AJUSTE, DSL.name("ajuste_usuario_id_fkey"), new TableField[] { Ajuste.AJUSTE.USUARIO_ID }, Keys.USUARIO_PKEY, new TableField[] { Usuario.USUARIO.ID }, true);
    public static final ForeignKey<Record, Record> AJUSTE_ITEM__AJUSTE_ITEM_AJUSTE_ID_FKEY = Internal.createForeignKey(AjusteItem.AJUSTE_ITEM, DSL.name("ajuste_item_ajuste_id_fkey"), new TableField[] { AjusteItem.AJUSTE_ITEM.AJUSTE_ID }, Keys.AJUSTE_PKEY, new TableField[] { Ajuste.AJUSTE.ID }, true);
    public static final ForeignKey<Record, Record> AJUSTE_ITEM__AJUSTE_ITEM_PRODUTO_ID_FKEY = Internal.createForeignKey(AjusteItem.AJUSTE_ITEM, DSL.name("ajuste_item_produto_id_fkey"), new TableField[] { AjusteItem.AJUSTE_ITEM.PRODUTO_ID }, Keys.PRODUTO_PKEY, new TableField[] { Produto.PRODUTO.ID }, true);
    public static final ForeignKey<Record, Record> OPERACAO__OPERACAO_PESSOA_ID_FKEY = Internal.createForeignKey(Operacao.OPERACAO, DSL.name("operacao_pessoa_id_fkey"), new TableField[] { Operacao.OPERACAO.PESSOA_ID }, Keys.PESSOA_PKEY, new TableField[] { Pessoa.PESSOA.ID }, true);
    public static final ForeignKey<Record, Record> OPERACAO__OPERACAO_USUARIO_ID_FKEY = Internal.createForeignKey(Operacao.OPERACAO, DSL.name("operacao_usuario_id_fkey"), new TableField[] { Operacao.OPERACAO.USUARIO_ID }, Keys.USUARIO_PKEY, new TableField[] { Usuario.USUARIO.ID }, true);
    public static final ForeignKey<Record, Record> OPERACAO_ITEM__OPERACAO_ITEM_OPERACAO_ID_FKEY = Internal.createForeignKey(OperacaoItem.OPERACAO_ITEM, DSL.name("operacao_item_operacao_id_fkey"), new TableField[] { OperacaoItem.OPERACAO_ITEM.OPERACAO_ID }, Keys.OPERACAO_PKEY, new TableField[] { Operacao.OPERACAO.ID }, true);
    public static final ForeignKey<Record, Record> OPERACAO_ITEM__OPERACAO_ITEM_PRODUTO_ID_FKEY = Internal.createForeignKey(OperacaoItem.OPERACAO_ITEM, DSL.name("operacao_item_produto_id_fkey"), new TableField[] { OperacaoItem.OPERACAO_ITEM.PRODUTO_ID }, Keys.PRODUTO_PKEY, new TableField[] { Produto.PRODUTO.ID }, true);
}
